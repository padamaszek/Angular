"use strict";
/**
 * Validation types.
 */
(function (ValidationTypes) {
    ValidationTypes[ValidationTypes["CONTAINS"] = 1] = "CONTAINS";
    ValidationTypes[ValidationTypes["EQUALS"] = 2] = "EQUALS";
    ValidationTypes[ValidationTypes["IS_AFTER"] = 3] = "IS_AFTER";
    ValidationTypes[ValidationTypes["IS_ALPHA"] = 4] = "IS_ALPHA";
    ValidationTypes[ValidationTypes["IS_ALPHANUMERIC"] = 5] = "IS_ALPHANUMERIC";
    ValidationTypes[ValidationTypes["IS_ASCII"] = 6] = "IS_ASCII";
    ValidationTypes[ValidationTypes["IS_BASE64"] = 7] = "IS_BASE64";
    ValidationTypes[ValidationTypes["IS_BEFORE"] = 8] = "IS_BEFORE";
    ValidationTypes[ValidationTypes["IS_BOOLEAN"] = 901] = "IS_BOOLEAN";
    ValidationTypes[ValidationTypes["IS_BOOLEAN_STRING"] = 9] = "IS_BOOLEAN_STRING";
    ValidationTypes[ValidationTypes["IS_BYTE_LENGTH"] = 10] = "IS_BYTE_LENGTH";
    ValidationTypes[ValidationTypes["IS_CREDIT_CARD"] = 11] = "IS_CREDIT_CARD";
    ValidationTypes[ValidationTypes["IS_CURRENCY"] = 12] = "IS_CURRENCY";
    ValidationTypes[ValidationTypes["IS_DATE"] = 13] = "IS_DATE";
    ValidationTypes[ValidationTypes["IS_DECIMAL"] = 14] = "IS_DECIMAL";
    ValidationTypes[ValidationTypes["IS_DIVISIBLE_BY"] = 15] = "IS_DIVISIBLE_BY";
    ValidationTypes[ValidationTypes["IS_EMAIL"] = 16] = "IS_EMAIL";
    ValidationTypes[ValidationTypes["IS_FQDN"] = 17] = "IS_FQDN";
    ValidationTypes[ValidationTypes["IS_FLOAT"] = 18] = "IS_FLOAT";
    ValidationTypes[ValidationTypes["IS_POSITIVE_FLOAT"] = 180] = "IS_POSITIVE_FLOAT";
    ValidationTypes[ValidationTypes["IS_NEGATIVE_FLOAT"] = 181] = "IS_NEGATIVE_FLOAT";
    ValidationTypes[ValidationTypes["IS_FULL_WIDTH"] = 19] = "IS_FULL_WIDTH";
    ValidationTypes[ValidationTypes["IS_HALF_WIDTH"] = 20] = "IS_HALF_WIDTH";
    ValidationTypes[ValidationTypes["IS_HEX_COLOR"] = 21] = "IS_HEX_COLOR";
    ValidationTypes[ValidationTypes["IS_HEXADECIMAL"] = 22] = "IS_HEXADECIMAL";
    ValidationTypes[ValidationTypes["IS_IP"] = 23] = "IS_IP";
    ValidationTypes[ValidationTypes["IS_ISBN"] = 24] = "IS_ISBN";
    ValidationTypes[ValidationTypes["IS_ISIN"] = 25] = "IS_ISIN";
    ValidationTypes[ValidationTypes["IS_ISO8601"] = 26] = "IS_ISO8601";
    ValidationTypes[ValidationTypes["IS_IN"] = 27] = "IS_IN";
    ValidationTypes[ValidationTypes["IS_INT"] = 28] = "IS_INT";
    ValidationTypes[ValidationTypes["IS_POSITIVE_INT"] = 283] = "IS_POSITIVE_INT";
    ValidationTypes[ValidationTypes["IS_NEGATIVE_INT"] = 284] = "IS_NEGATIVE_INT";
    ValidationTypes[ValidationTypes["IS_JSON"] = 29] = "IS_JSON";
    ValidationTypes[ValidationTypes["IS_LENGTH"] = 30] = "IS_LENGTH";
    ValidationTypes[ValidationTypes["IS_LOWERCASE"] = 31] = "IS_LOWERCASE";
    ValidationTypes[ValidationTypes["IS_MOBILE_PHONE"] = 32] = "IS_MOBILE_PHONE";
    ValidationTypes[ValidationTypes["IS_MONGO_ID"] = 33] = "IS_MONGO_ID";
    ValidationTypes[ValidationTypes["IS_MULTIBYTE"] = 34] = "IS_MULTIBYTE";
    ValidationTypes[ValidationTypes["IS_NULL"] = 35] = "IS_NULL";
    ValidationTypes[ValidationTypes["IS_NUMERIC"] = 36] = "IS_NUMERIC";
    ValidationTypes[ValidationTypes["IS_SURROGATE_PAIR"] = 37] = "IS_SURROGATE_PAIR";
    ValidationTypes[ValidationTypes["IS_URL"] = 38] = "IS_URL";
    ValidationTypes[ValidationTypes["IS_UUID"] = 39] = "IS_UUID";
    ValidationTypes[ValidationTypes["IS_UPPERCASE"] = 40] = "IS_UPPERCASE";
    ValidationTypes[ValidationTypes["IS_VARIABLE_WIDTH"] = 41] = "IS_VARIABLE_WIDTH";
    ValidationTypes[ValidationTypes["MATCHES"] = 42] = "MATCHES";
    // custom validation types
    ValidationTypes[ValidationTypes["MIN_LENGTH"] = 301] = "MIN_LENGTH";
    ValidationTypes[ValidationTypes["MAX_LENGTH"] = 302] = "MAX_LENGTH";
    ValidationTypes[ValidationTypes["MIN_NUMBER"] = 281] = "MIN_NUMBER";
    ValidationTypes[ValidationTypes["MAX_NUMBER"] = 282] = "MAX_NUMBER";
    ValidationTypes[ValidationTypes["NOT_EMPTY"] = 1001] = "NOT_EMPTY";
    ValidationTypes[ValidationTypes["NOT_EMPTY_ARRAY"] = 1002] = "NOT_EMPTY_ARRAY";
    ValidationTypes[ValidationTypes["MIN_SIZE"] = 1003] = "MIN_SIZE";
    ValidationTypes[ValidationTypes["MAX_SIZE"] = 1004] = "MAX_SIZE";
    ValidationTypes[ValidationTypes["NESTED_VALIDATION"] = 0] = "NESTED_VALIDATION";
    ValidationTypes[ValidationTypes["CUSTOM_VALIDATION"] = 99999] = "CUSTOM_VALIDATION";
})(exports.ValidationTypes || (exports.ValidationTypes = {}));
var ValidationTypes = exports.ValidationTypes;
var ValidationTypesUtils = (function () {
    function ValidationTypesUtils() {
    }
    ValidationTypesUtils.getCodeName = function (code) {
        switch (code) {
            case ValidationTypes.CONTAINS:
                return "contains";
            case ValidationTypes.EQUALS:
                return "equals";
            case ValidationTypes.IS_AFTER:
                return "after";
            case ValidationTypes.IS_ALPHA:
                return "alpha";
            case ValidationTypes.IS_ALPHANUMERIC:
                return "alphanumeric";
            case ValidationTypes.IS_ASCII:
                return "ascii";
            case ValidationTypes.IS_BASE64:
                return "base64";
            case ValidationTypes.IS_BEFORE:
                return "before";
            case ValidationTypes.IS_BOOLEAN:
                return "boolean";
            case ValidationTypes.IS_BYTE_LENGTH:
                return "byte_length";
            case ValidationTypes.IS_CREDIT_CARD:
                return "credit_card";
            case ValidationTypes.IS_CURRENCY:
                return "currency";
            case ValidationTypes.IS_DATE:
                return "date";
            case ValidationTypes.IS_DECIMAL:
                return "decimal";
            case ValidationTypes.IS_DIVISIBLE_BY:
                return "divisible_by";
            case ValidationTypes.IS_EMAIL:
                return "email";
            case ValidationTypes.IS_FQDN:
                return "fqdn";
            case ValidationTypes.IS_FLOAT:
                return "float";
            case ValidationTypes.IS_POSITIVE_FLOAT:
                return "positive_float";
            case ValidationTypes.IS_NEGATIVE_FLOAT:
                return "negative_float";
            case ValidationTypes.IS_FULL_WIDTH:
                return "full_width";
            case ValidationTypes.IS_HALF_WIDTH:
                return "half_width";
            case ValidationTypes.IS_HEX_COLOR:
                return "hex_color";
            case ValidationTypes.IS_HEXADECIMAL:
                return "hexadecimal";
            case ValidationTypes.IS_IP:
                return "ip";
            case ValidationTypes.IS_ISBN:
                return "isbn";
            case ValidationTypes.IS_ISIN:
                return "isin";
            case ValidationTypes.IS_ISO8601:
                return "iso8601";
            case ValidationTypes.IS_IN:
                return "in";
            case ValidationTypes.IS_INT:
                return "int";
            case ValidationTypes.IS_POSITIVE_INT:
                return "positive_int";
            case ValidationTypes.IS_NEGATIVE_INT:
                return "negative_int";
            case ValidationTypes.IS_JSON:
                return "json";
            case ValidationTypes.IS_LENGTH:
                return "length";
            case ValidationTypes.IS_LOWERCASE:
                return "lowercase";
            case ValidationTypes.IS_MOBILE_PHONE:
                return "mobile_phone";
            case ValidationTypes.IS_MONGO_ID:
                return "mongo_id";
            case ValidationTypes.IS_MULTIBYTE:
                return "multibyte";
            case ValidationTypes.IS_NULL:
                return "null";
            case ValidationTypes.IS_NUMERIC:
                return "numeric";
            case ValidationTypes.IS_SURROGATE_PAIR:
                return "surrogate_pair";
            case ValidationTypes.IS_URL:
                return "url";
            case ValidationTypes.IS_UUID:
                return "uuid";
            case ValidationTypes.IS_UPPERCASE:
                return "uppercase";
            case ValidationTypes.IS_VARIABLE_WIDTH:
                return "variable_width";
            case ValidationTypes.MATCHES:
                return "matches";
            // custom validation types
            case ValidationTypes.MIN_LENGTH:
                return "min_length";
            case ValidationTypes.MAX_LENGTH:
                return "max_length";
            case ValidationTypes.MIN_NUMBER:
                return "min_number";
            case ValidationTypes.MAX_NUMBER:
                return "max_number";
            case ValidationTypes.NOT_EMPTY:
                return "not_empty";
            case ValidationTypes.NOT_EMPTY_ARRAY:
                return "not_empty_array";
            case ValidationTypes.MIN_SIZE:
                return "min_size";
            case ValidationTypes.MAX_SIZE:
                return "max_size";
        }
    };
    return ValidationTypesUtils;
}());
exports.ValidationTypesUtils = ValidationTypesUtils;
//# sourceMappingURL=ValidationTypes.js.map